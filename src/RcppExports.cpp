// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calculateScores
NumericMatrix calculateScores(const arma::sp_mat& orig_mat, CharacterVector row_names, List gene_ids);
RcppExport SEXP _genefunnel_calculateScores(SEXP orig_matSEXP, SEXP row_namesSEXP, SEXP gene_idsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type orig_mat(orig_matSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type row_names(row_namesSEXP);
    Rcpp::traits::input_parameter< List >::type gene_ids(gene_idsSEXP);
    rcpp_result_gen = Rcpp::wrap(calculateScores(orig_mat, row_names, gene_ids));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_genefunnel_calculateScores", (DL_FUNC) &_genefunnel_calculateScores, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_genefunnel(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
